version: 2

defaults: &defaults
  working_directory: /tmp/ci/sykube
  docker:
    - image: golang:1.17.11-stretch

jobs:
  get_source:
    <<: *defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: /tmp/ci
          paths:
            - sykube

  install_sykube:
    machine: true
    working_directory: /tmp/ci/sykube
    steps:
      - attach_workspace:
          at: /tmp/ci
      - run:
          name: Update go to 1.17
          command: |
            wget https://dl.google.com/go/go1.17.6.linux-amd64.tar.gz
            sudo tar -C /usr/lib -xzf go1.17.6.linux-amd64.tar.gz
      - run:
          name: Install dev libraries
          command: |
            sudo apt-get update -y
            sudo apt-get install -y build-essential libssl-dev uuid-dev squashfs-tools libseccomp-dev libgpgme-dev pkg-config cryptsetup-bin
      - run:
          name: Install singularity
          command: |
            export PATH=/usr/lib/go/bin:$PATH
            git clone https://github.com/sylabs/singularity -b v3.9.2
            cd singularity
            ./mconfig -p /tmp/ci/sykube/sinstall
            make -C ./builddir
            sudo make -C ./builddir install
      - run:
          name: set Cgroupv1
          command: |
            sudo rm /etc/default/grub
            sudo cat > /etc/default/grub <<EOF
            # If you change this file, run 'update-grub' afterwards to update
            # /boot/grub/grub.cfg.
            # For full documentation of the options in this file, see:
            #   info -f grub -n 'Simple configuration'

            GRUB_DEFAULT=0
            GRUB_TIMEOUT_STYLE=hidden
            GRUB_TIMEOUT=0
            GRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`
            GRUB_CMDLINE_LINUX_DEFAULT="systemd.unified_cgroup_hierarchy=0 quiet splash"
            GRUB_CMDLINE_LINUX="systemd.unified_cgroup_hierarchy=false systemd.legacy_systemd_cgroup_controller=false"

            # Uncomment to enable BadRAM filtering, modify to suit your needs
            # This works with Linux (no patch required) and with any kernel that obtains
            # the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)
            #GRUB_BADRAM="0x01234567,0xfefefefe,0x89abcdef,0xefefefef"

            # Uncomment to disable graphical terminal (grub-pc only)
            #GRUB_TERMINAL=console

            # The resolution used on graphical terminal
            # note that you can use only modes which your graphic card supports via VBE
            # you can see them in real GRUB with the command `vbeinfo'
            #GRUB_GFXMODE=640x480

            # Uncomment if you don't want GRUB to pass "root=UUID=xxx" parameter to Linux
            #GRUB_DISABLE_LINUX_UUID=true

            # Uncomment to disable generation of recovery mode menu entries
            #GRUB_DISABLE_RECOVERY="true"

            # Uncomment to get a beep at grub start
            #GRUB_INIT_TUNE="480 440 1"
            EOF
            sudo update-grub
            sudo init 6
      - run:
          name: Build sykube image
          command: |
            sudo /tmp/ci/sykube/sinstall/bin/singularity build sykube.sif sykube.def
      - run:
          name: Test sykube deployment
          command: |
            export PATH=/tmp/ci/sykube/sinstall/bin:$PATH
            sudo /tmp/ci/sykube/sinstall/bin/singularity run sykube.sif
            sykube init --local-image sykube.sif
      - persist_to_workspace:
          root: /tmp/ci
          paths:
            - sykube/sinstall
            - sykube/sykube.sif

  publish_sykube:
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/ci
      - run:
          name: Install prerequisities
          command: |
            sudo apt-get update -y
            sudo apt-get install -y expect libseccomp-dev libssl-dev uuid-dev libgpgme11-dev
      - run:
          name: Publish Sykube image
          working_directory: /tmp/ci/sykube
          command: |
            TAG=latest
            if [ ! -z "${CIRCLE_TAG}" ]; then
                TAG=${CIRCLE_TAG}
            fi
            export PATH=/tmp/ci/sykube/sinstall/bin:$PATH
            mkdir ~/.singularity
            touch ~/.singularity/remote.yaml
            echo $CLOUD_AUTH_TOKEN > token
            singularity remote login --tokenfile token SylabsCloud
            echo $SYLABS_PRIVKEY_BASE64 | base64 -d - > key
            cat > import_key.cmd <<EOF
            #!/usr/bin/expect -f
            set timeout -1
            spawn singularity keys import key
            expect "Enter your key password : "
            send -- "\r"
            expect eof
            EOF
            expect import_key.cmd
            singularity sign sykube.sif
            singularity push sykube.sif library://library/default/sykube:$TAG

workflows:
  version: 2
  build_and_test:
    jobs:
      - get_source
      - install_sykube:
          requires:
            - get_source
      - publish_sykube:
          requires:
            - install_sykube
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - master
